name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
  SPRING_CLOUD_AWS_CREDENTIALS_ACCESS_KEY: ${{ secrets.SPRING_CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}
  SPRING_CLOUD_AWS_CREDENTIALS_SECRET_KEY: ${{ secrets.SPRING_CLOUD_AWS_CREDENTIALS_SECRET_KEY }}
  SPRING_CLOUD_AWS_REGION_STATIC: ${{ secrets.SPRING_CLOUD_AWS_REGION_STATIC }}
  SPRING_CLOUD_AWS_S3_BUCKET: ${{ secrets.SPRING_CLOUD_AWS_S3_BUCKET }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

  build:
    name: Build Application
    needs: test  # test job 완료 후 실행
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build application
        run: ./gradlew build --no-daemon
