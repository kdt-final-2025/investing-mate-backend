name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
  SPRING_CLOUD_AWS_CREDENTIALS_ACCESS_KEY: ${{ secrets.SPRING_CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}
  SPRING_CLOUD_AWS_CREDENTIALS_SECRET_KEY: ${{ secrets.SPRING_CLOUD_AWS_CREDENTIALS_SECRET_KEY }}
  SPRING_CLOUD_AWS_REGION_STATIC: ${{ secrets.SPRING_CLOUD_AWS_REGION_STATIC }}
  SPRING_CLOUD_AWS_S3_BUCKET: ${{ secrets.SPRING_CLOUD_AWS_S3_BUCKET }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    # ---------------- Services 정의 시작 ----------------
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: redlight
          POSTGRES_USER: user123
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -U user123 -d redlight"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
        ports:
          - 9200:9200
          - 9300:9300
        env:
          node.name: es-node
          cluster.name: es-cluster
          discovery.type: single-node
          xpack.security.enabled: "false"
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        options: >-
          --health-cmd "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    # ---------------- Services 정의 끝 ----------------

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon \
          -Dspring.datasource.url=jdbc:postgresql://localhost:5432/redlight \
          -Dspring.datasource.username=user123 \
          -Dspring.datasource.password=password \
          -Dspring.elasticsearch.rest.uris=http://localhost:9200
